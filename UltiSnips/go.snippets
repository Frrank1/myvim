snippet log "Description" !b
fmt.Printf("### $1 -> %+v\n", $1)
endsnippet

snippet ins "Description" !b
fmt.Printf("### $1 -> %+v\n", $1)
endsnippet

snippet init "Description" b
func init() {
	$1
}
endsnippet

snippet hfunc "Description" i
func $1(res http.ResponseWriter, req *http.Request) {
	$2
}
endsnippet

snippet errf "" i
if err != nil {
	log.Fatal(err)
}
endsnippet

snippet logf "Description" i
log.Fatal($1)
endsnippet

snippet las "Description" i
http.ListenAndServe("${1::3000}", ${2:nil})
endsnippet

snippet timestamps "Descriptions" !b
CreatedAt time.Time \`json:"created_at" db:"created_at"\`
UpdatedAt time.Time \`json:"updated_at" db:"updated_at"\`
endsnippet

snippet model "Description" !b
type $1 struct {
	ID        int       "json:"id" db:"id""
	CreatedAt time.Time \`json:"created_at" db:"created_at"\`
	UpdatedAt time.Time \`json:"updated_at" db:"updated_at"\`
}
endsnippet

snippet test "" !b
func Test_$1 (t *testing.T) {
  r := require.New(t)
}
endsnippet

snippet roll "" !b
th.Rollback(func(tx *pop.Connection) {
})
endsnippet

snippet efunc "" !b
func $1(ctx *echo.Context) error {
}
endsnippet

snippet err "" !b
if err != nil {
	return err
}
endsnippet

snippet suite "" !b
type $1Suite struct {
	th.Suite
}

func Test$1Suite(t *testing.T) {
	suite.Run(t, &$1Suite{})
}
endsnippet
